#!/bin/bash
#Version Beta 0.94

usage ()
{
  echo 'Usage : updateDynatraceCollector -C <new Dynatrace directory> -N <new Dynatrace directory> -F <file> -M <dtmigration.jar path> -B <64/32 bit>'
  echo 'i.e.  : updateDynatraceCollector -C /opt/dynaTrace-6.1/ -N /opt/dynaTrace-6.2/ -F /tmp/dynatrace-collector-6.2.0.1239-linux-x86.jar -M /tmp/dtmigration.jar -B 64'
  exit
}

while [ "$1" != "" ]; do
    case $1 in
        -C | --current )        shift
								dynatraceDirectoryOld=$1								
                                ;;
        -N | --new )            shift
								dynatraceDirectoryNew=$1								
                                ;;
        -F | --file )           shift
                                dynatraceInstallFile=$1
                                ;;
		-M | --migration )      shift
                                dtMigrationJar=$1
                                ;;
		-B | --bit )        	shift
                                dynatraceBit=$1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

if [ -z $dynatraceDirectoryOld ]
	then
	echo "[-C CurrentDynatraceDirectory] argument has not been supplied"
	echo "Please provide all parameters [-C CurrentDynatraceDirectory] [-N NewDynatraceDirectory] [-F Filename] [-M MigrationJar]  [-B Bit]"
	exit
elif [ -z $dynatraceDirectoryNew ] 
	then
	echo "[-N NewDynatraceDirectory] argument has not been supplied"
	echo "Please provide all parameters [-C CurrentDynatraceDirectory] [-N NewDynatraceDirectory] [-F Filename] [-M MigrationJar]  [-B Bit]"
	exit
elif [ -z $dynatraceInstallFile ] 
	then
	echo "[-F Filename] argument has not been supplied"
	echo "Please provide all parameters [-C CurrentDynatraceDirectory] [-N NewDynatraceDirectory] [-F Filename] [-M MigrationJar]  [-B Bit]"
	exit
elif [ -z $dtMigrationJar ]
	then
	echo "[-M MigrationJar] argument has not been supplied"
	echo "Please provide all parameters [-C CurrentDynatraceDirectory] [-N NewDynatraceDirectory] [-F Filename] [-M MigrationJar] [-B Bit]"
	exit
elif [ -z $dynatraceBit ]
	then
	echo "[-B Bit] argument has not been supplied"
	echo "Please provide all parameters [-C CurrentDynatraceDirectory] [-N NewDynatraceDirectory] [-F Filename] [-M MigrationJar]  [-B Bit]"
	exit
fi

if [[ $dynatraceDirectoryOld == *"/" ]]; then dynatraceDirectoryOld=`echo $dynatraceDirectoryOld | rev | cut -c 2- | rev`
fi

if [[ $dynatraceDirectoryNew == *"/" ]]; then dynatraceDirectoryNew=`echo $dynatraceDirectoryNew | rev | cut -c 2- | rev`
fi

#New Collector Install
echo Installing new Collector...
mkdir $dynatraceDirectoryNew
installationResult=$(echo -e $dynatraceBit\\nN\\n$dynatraceDirectoryNew\\nY\\nY | java -jar $dynatraceInstallFile | tail -1)
if [[ $installationResult == "Installation finished successfully"* ]]; then
	echo Installation finished successfully.
else
	echo Installation failed!
	echo Migration script will exit.
	exit
fi

#Migration
echo Migrating Files...
migrationResult=$(java -jar $dtMigrationJar -migration -sourceDTHome $dynatraceDirectoryOld/ -targetDTHome $dynatraceDirectoryNew/ -silent)
if [[ $migrationResult == *"MIGRATION_DONE_SUCCESSFULLY"* ]]; then
	echo Migration finished successfully.
else
	echo Migration failed!
	echo Migration script will exit.
	exit 
fi
wait ${!}

#Migrate dtcollector.ini
if [ -f $dynatraceDirectoryNew/dtcollector.ini ] && [ -f $dynatraceDirectoryOld/dtcollector.ini ]
	then
		diff -ruN $dynatraceDirectoryNew/dtcollector.ini $dynatraceDirectoryNew/dtcollector.ini.[Tt]o[Bb]e[Mm]igrated > /tmp/patchfile.patch
		length=`grep -n '@@' /tmp/patchfile.patch | wc -l`
		if [[ $length == "0" ]]; then echo "No patching of .ini file needed"
		elif [[ $length == "1" ]]; then patch -f -p2 < /tmp/patchfile.patch
		elif [[ $length == "2" ]]; then
				deleteFromLine=`grep -n '@@' /tmp/patchfile.patch | cut -c 1-3| tail -1 | grep -o '[0-9]*'`
				deleteToLine=`grep -n "" /tmp/patchfile.patch | cut -c 1-3 | tail -1 | grep -o '[0-9]*'`
				deleteToLine="$deleteToLine"d
				sed -e $deleteFromLine,$deleteToLine /tmp/patchfile.patch > /tmp/patchfileNew.patch
			patch -f -p2 < /tmp/patchfileNew.patch
			rm /tmp/patchfileNew.patch
		else
			echo Patching of ini files failed!
			echo Migration script will exit.
			exit
		fi
		rm /tmp/patchfile.patch
		if [ ! -f $dynatraceDirectoryNew/dtcollector.ini ] || [ ! -s $dynatraceDirectoryNew/dtcollector.ini ]
			then
				echo Migration failed! The dtcollector.ini does not exist or is empty.
				echo Migration script will exit.
			exit 
		fi
		rm $dynatraceDirectoryNew/dtcollector.ini.[Tt]o[Bb]e[Mm]igrated
else
	echo Old or new dtcollector.ini could not be found!
	echo Migration script will exit.
	exit
fi

#Stop old dynaTrace service
echo Stopping Dynatrace...
pidID=`ps -ef | grep 'name dtcollector' | grep -v 'grep' | cut -d' ' -f7`
$dynatraceDirectoryOld/init.d/dynaTraceCollector stop  
if ! [ -z $pidID ]; then
	while [ -e /proc/$pidID ]; do sleep 0.1; done
fi

#Start new dynaTrace service
echo Starting new Dynatrace service...
$dynatraceDirectoryNew/init.d/dynaTraceCollector start

#Automatic start configuration
echo Automatic start configuration...
cd /etc/init.d/
osVersion=`lsb_release -a | grep 'Distributor ID' -m 1`
if [[ $osVersion == *Ubuntu* ]]; then
	lineCount=`stat -t /etc/rc3.d/*dynaTraceCollector* | wc -l`
	if [ $lineCount -gt 0 ]; then 
		update-rc.d -f dynaTraceCollector remove
		rm dynaTraceCollector
		cp $dynatraceDirectoryNew/init.d/dynaTraceCollector /etc/init.d/
		cd /etc/init.d/
		update-rc.d dynaTraceCollector start 20 3 5 . stop 80 0 1 2 6 .
	elif grep -Fxq "$dynatraceDirectoryOld/init.d/dynaTraceCollector start" /etc/rc.local; then 
		sed -i 's|'"$dynatraceDirectoryOld/init.d/dynaTraceCollector start"'|'"$dynatraceDirectoryNew/init.d/dynaTraceCollector start"'|g' /etc/rc.local
	else 
		echo "Neither update-rc.d nor /etc/rc.local are used to start Dynatrace AM services on startup"
		echo "Please manually modify the automatic startup of Dynatrace AM services"
	fi
else
	lineCount=`chkconfig dynaTraceCollector --list | wc -l`
	if grep -Fxq "$dynatraceDirectoryOld/init.d/dynaTraceCollector start" /etc/rc.local
		then sed -i 's|'"$dynatraceDirectoryOld/init.d/dynaTraceCollector start"'|'"$dynatraceDirectoryNew/init.d/dynaTraceCollector start"'|g' /etc/rc.local
	elif [ $lineCount -gt 0 ]; then
		cd /etc/init.d/
		chkconfig --del dynaTraceCollector
		rm dynaTraceCollector
		cp $dynatraceDirectoryNew/init.d/dynaTraceCollector /etc/init.d/
		chkconfig --add dynaTraceCollector		
	else 
		echo "Neither chkconfig nor /etc/rc.local are used to start Dynatrace AM services on startup"
		echo "Please manually modify the automatic startup of Dynatrace AM services"
		#echo "$dynatraceDirectoryNew/init.d/dynaTraceCollector start" >> "/etc/rc.local"  #appends startup to rc.local
	fi
fi

echo "Script Complete"